{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenduyphong/Desktop/tutorial/React-udemy/01-starting-project-section-10/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  // them  cai  nay` se~ co  gợi  ý của  IDE. \n  onLogout: () => {},\n  // them  cai  nay` se~ co  gợi  ý của  IDE.\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/nguyenduyphong/Desktop/tutorial/React-udemy/01-starting-project-section-10/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAChB;AACpBC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFkB;AAEf;AACrBC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHI,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,QAAMI,YAAY,GAAG,MAAM;AACvBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAChCP,MAAAA,UAAU,EAAEA,UADoB;AAEhCC,MAAAA,QAAQ,EAAEO,aAFsB;AAGhCN,MAAAA,OAAO,EAAES;AAHuB,KAA7B;AAAA,cAKFL,KAAK,CAACO;AALJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CApBM;;GAAMR,mB;;KAAAA,mB;AAsBb,eAAeP,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,  // them  cai  nay` se~ co  gợi  ý của  IDE. \n    onLogout: () => {},  // them  cai  nay` se~ co  gợi  ý của  IDE.\n    onLogin: (email, password) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn');\n        setIsLoggedIn(false);\n    }\n\n    const loginHandler = () => {\n        localStorage.setItem('isLoggedIn', '1');\n        setIsLoggedIn(true);\n    }\n\n    return <AuthContext.Provider value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler\n      }}>   \n        {props.children}\n    </AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}