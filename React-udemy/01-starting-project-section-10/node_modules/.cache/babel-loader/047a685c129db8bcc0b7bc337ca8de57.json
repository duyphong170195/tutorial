{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenduyphong/Desktop/tutorial/React-udemy/01-starting-project-section-10/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // // moi lan reload lai web no se chay vao useEffect\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n  //   if(storedUserLoggedInInformation === '1') {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1');\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n  const ctx = useContext(AuthContext);\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider value={{\n    //   isLoggedIn: isLoggedIn,\n    //   onLogout: logoutHandler\n    // }}\n    // > \n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: ctx.onLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: ctx.onLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nguyenduyphong/Desktop/tutorial/React-udemy/01-starting-project-section-10/src/App.js"],"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","ctx","isLoggedIn","onLogin","onLogout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAMC,GAAG,GAAGN,UAAU,CAACI,WAAD,CAAtB;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBACG,CAACE,GAAG,CAACC,UAAL,iBAAmB,QAAC,KAAD;AAAO,UAAA,OAAO,EAAED,GAAG,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,gBADtB,EAEGF,GAAG,CAACC,UAAJ,iBAAkB,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAED,GAAG,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAcD;;GAtCQJ,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, {useContext} from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // // moi lan reload lai web no se chay vao useEffect\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n  //   if(storedUserLoggedInInformation === '1') {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1');\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n  const ctx = useContext(AuthContext)\n  return (\n    // <AuthContext.Provider value={{\n    //   isLoggedIn: isLoggedIn,\n    //   onLogout: logoutHandler\n    // }}\n    // > \n    <React.Fragment>\n        <MainHeader/>\n        <main>\n          {!ctx.isLoggedIn && <Login onLogin={ctx.onLogin} />}\n          {ctx.isLoggedIn && <Home onLogout={ctx.onLogout} />}\n        </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}